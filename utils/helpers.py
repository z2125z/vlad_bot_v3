from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from utils.timezone import format_moscow_time

def get_admin_main_keyboard():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats"))
    keyboard.add(InlineKeyboardButton(text="üì® –†–∞—Å—Å—ã–ª–∫–∏", callback_data="admin_mailings"))
    keyboard.add(InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="admin_users"))
    keyboard.adjust(1)
    return keyboard.as_markup()

def get_stats_keyboard():
    """–ú–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –∫–Ω–æ–ø–∫–æ–π —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏ –ª–æ–≥–æ–≤"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats_overview"))
    keyboard.add(InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫", callback_data="stats_mailings"))
    keyboard.add(InlineKeyboardButton(text="üë§ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="stats_users"))
    keyboard.add(InlineKeyboardButton(text="üìÅ –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel", callback_data="export_excel"))
    keyboard.add(InlineKeyboardButton(text="üìã –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏", callback_data="get_logs"))
    keyboard.add(InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="admin_main"))
    keyboard.adjust(1)
    return keyboard.as_markup()

def get_mailings_keyboard():
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∞–º–∏"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="‚úâÔ∏è –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="create_mailing"))
    keyboard.add(InlineKeyboardButton(text="üì§ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏", callback_data="mailings_active"))
    keyboard.add(InlineKeyboardButton(text="üìù –ß–µ—Ä–Ω–æ–≤–∏–∫–∏", callback_data="mailings_drafts"))
    keyboard.add(InlineKeyboardButton(text="üìÅ –ê—Ä—Ö–∏–≤ —Ä–∞—Å—Å—ã–ª–æ–∫", callback_data="mailings_archive"))
    keyboard.add(InlineKeyboardButton(text="üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="mailings_send"))
    keyboard.add(InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="admin_main"))
    keyboard.adjust(1)
    return keyboard.as_markup()

def get_users_keyboard():
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="users_list"))
    keyboard.add(InlineKeyboardButton(text="üìÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ–≥–æ–¥–Ω—è", callback_data="users_active_today"))
    keyboard.add(InlineKeyboardButton(text="üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", callback_data="users_analytics"))
    keyboard.add(InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="admin_main"))
    keyboard.adjust(1)
    return keyboard.as_markup()

def get_mailing_actions_keyboard(mailing_id: int, status: str):
    """–î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏"""
    keyboard = InlineKeyboardBuilder()
    
    if status == "draft":
        keyboard.add(InlineKeyboardButton(text="üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä", callback_data=f"view_mailing_{mailing_id}"))
        keyboard.add(InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_mailing_{mailing_id}"))
        keyboard.add(InlineKeyboardButton(text="‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"activate_mailing_{mailing_id}"))
    elif status == "active":
        keyboard.add(InlineKeyboardButton(text="üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä", callback_data=f"view_mailing_{mailing_id}"))
        keyboard.add(InlineKeyboardButton(text="üìÅ –í –∞—Ä—Ö–∏–≤", callback_data=f"archive_mailing_{mailing_id}"))
        keyboard.add(InlineKeyboardButton(text="üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data=f"send_mailing_{mailing_id}"))
    elif status == "archived":
        keyboard.add(InlineKeyboardButton(text="üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä", callback_data=f"view_mailing_{mailing_id}"))
        keyboard.add(InlineKeyboardButton(text="‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"activate_mailing_{mailing_id}"))
    
    keyboard.add(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_mailing_{mailing_id}"))
    keyboard.add(InlineKeyboardButton(text="üîô –ö —Å–ø–∏—Å–∫—É —Ä–∞—Å—Å—ã–ª–æ–∫", callback_data="admin_mailings"))
    keyboard.adjust(2)
    return keyboard.as_markup()

def get_mailing_type_keyboard():
    """–í—ã–±–æ—Ä —Ç–∏–ø–∞ —Ä–∞—Å—Å—ã–ª–∫–∏"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="üìù –¢–µ–∫—Å—Ç", callback_data="mailing_type_text"))
    keyboard.add(InlineKeyboardButton(text="üñºÔ∏è –§–æ—Ç–æ + —Ç–µ–∫—Å—Ç", callback_data="mailing_type_photo"))
    keyboard.add(InlineKeyboardButton(text="üé• –í–∏–¥–µ–æ + —Ç–µ–∫—Å—Ç", callback_data="mailing_type_video"))
    keyboard.add(InlineKeyboardButton(text="üìé –î–æ–∫—É–º–µ–Ω—Ç + —Ç–µ–∫—Å—Ç", callback_data="mailing_type_document"))
    keyboard.add(InlineKeyboardButton(text="üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ", callback_data="mailing_type_voice"))
    keyboard.add(InlineKeyboardButton(text="üìπ –í–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="mailing_type_video_note"))
    keyboard.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_mailings"))
    keyboard.adjust(2)
    return keyboard.as_markup()

def get_target_groups_keyboard(mailing_id: int):
    """–í—ã–±–æ—Ä —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="üë• –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data=f"target_all_{mailing_id}"))
    keyboard.add(InlineKeyboardButton(text="üìÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ–≥–æ–¥–Ω—è", callback_data=f"target_active_{mailing_id}"))
    keyboard.add(InlineKeyboardButton(text="üÜï –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (7 –¥–Ω–µ–π)", callback_data=f"target_new_week_{mailing_id}"))
    keyboard.add(InlineKeyboardButton(text="üÜï –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (30 –¥–Ω–µ–π)", callback_data=f"target_new_month_{mailing_id}"))
    keyboard.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="mailings_send"))
    keyboard.adjust(1)
    return keyboard.as_markup()

def get_target_group_name(target_group: str) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø—ã"""
    names = {
        "all": "–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
        "active": "–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ–≥–æ–¥–Ω—è", 
        "new_week": "–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (7 –¥–Ω–µ–π)",
        "new_month": "–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (30 –¥–Ω–µ–π)"
    }
    return names.get(target_group, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞")

def get_back_keyboard(target: str = "admin_main"):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=target))
    return keyboard.as_markup()

def get_mailing_preview_keyboard(mailing_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–µ–≤—å—é —Ä–∞—Å—Å—ã–ª–∫–∏"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å", callback_data=f"send_now_{mailing_id}"))
    keyboard.add(InlineKeyboardButton(text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫", callback_data=f"save_draft_{mailing_id}"))
    keyboard.add(InlineKeyboardButton(text="‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"activate_mailing_{mailing_id}"))
    keyboard.add(InlineKeyboardButton(text="üîô –ö —Ä–∞—Å—Å—ã–ª–∫–∞–º", callback_data="admin_mailings"))
    keyboard.adjust(1)
    return keyboard.as_markup()

def get_skip_edit_keyboard(mailing_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–¥–∏–∞"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"skip_edit_{mailing_id}"))
    keyboard.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=f"view_mailing_{mailing_id}"))
    keyboard.adjust(1)
    return keyboard.as_markup()

# –§—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç db, –±—É–¥—É—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è
def format_stats_overview():
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –º–æ—Å–∫–æ–≤—Å–∫–∏–º –≤—Ä–µ–º–µ–Ω–µ–º"""
    try:
        from services.database import db  # –õ–æ–∫–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        
        users_count = db.get_user_count()
        active_today = db.get_active_users_count_today()
        all_mailings = len(db.get_all_mailings())
        active_mailings = len(db.get_mailings_by_status('active'))
        
        return f"""
üìä <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>
   ‚Ä¢ –í—Å–µ–≥–æ: <b>{users_count}</b>
   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: <b>{active_today}</b>
   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: <b>{(active_today/users_count*100 if users_count > 0 else 0):.1f}%</b>

üì® <b>–†–∞—Å—Å—ã–ª–∫–∏:</b>
   ‚Ä¢ –í—Å–µ–≥–æ: <b>{all_mailings}</b>
   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: <b>{active_mailings}</b>

‚è±Ô∏è <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> {format_moscow_time()}
"""
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}"

def format_users_stats():
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        from services.database import db  # –õ–æ–∫–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
        
        users_count = db.get_user_count()
        active_today = db.get_active_users_count_today()
        active_week = db.get_active_users_count_week()
        new_today = db.get_new_users_count(days=1)
        new_week = db.get_new_users_count(days=7)
        
        today_rate = (active_today / users_count * 100) if users_count > 0 else 0
        week_rate = (active_week / users_count * 100) if users_count > 0 else 0
        
        return f"""
üë• <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>

üìà <b>–û–±—â–µ–µ:</b>
   ‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{users_count}</b>
   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: <b>{active_today}</b>
   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: <b>{active_week}</b>
   ‚Ä¢ –ù–æ–≤—ã—Ö —Å–µ–≥–æ–¥–Ω—è: <b>{new_today}</b>
   ‚Ä¢ –ù–æ–≤—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: <b>{new_week}</b>

üìä <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b>
   ‚Ä¢ –°–µ–≥–æ–¥–Ω—è: <b>{today_rate:.1f}%</b>
   ‚Ä¢ –ó–∞ –Ω–µ–¥–µ–ª—é: <b>{week_rate:.1f}%</b>

‚è±Ô∏è <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> {format_moscow_time()}
"""
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}"

def format_mailings_stats():
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫ —Å –º–æ—Å–∫–æ–≤—Å–∫–∏–º –≤—Ä–µ–º–µ–Ω–µ–º"""
    try:
        from services.database import db  # –õ–æ–∫–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
        
        all_mailings = db.get_all_mailings()
        active_mailings = db.get_mailings_by_status('active')
        draft_mailings = db.get_mailings_by_status('draft')
        archived_mailings = db.get_mailings_by_status('archived')
        
        total_sent = 0
        total_delivered = 0
        total_read = 0
        
        for mailing in all_mailings:
            stats = db.get_mailing_stats(mailing['id'])
            total_sent += stats['total_sent']
            total_delivered += stats['delivered']
            total_read += stats['read']
        
        overall_success_rate = (total_delivered / total_sent * 100) if total_sent > 0 else 0
        overall_read_rate = (total_read / total_sent * 100) if total_sent > 0 else 0
        
        return f"""
üì® <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫</b>

üìà <b>–û–±—â–µ–µ:</b>
   ‚Ä¢ –í—Å–µ–≥–æ —Ä–∞—Å—Å—ã–ª–æ–∫: <b>{len(all_mailings)}</b>
   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: <b>{len(active_mailings)}</b>
   ‚Ä¢ –ß–µ—Ä–Ω–æ–≤–∏–∫–æ–≤: <b>{len(draft_mailings)}</b>
   ‚Ä¢ –í –∞—Ä—Ö–∏–≤–µ: <b>{len(archived_mailings)}</b>

üìä <b>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b>
   ‚Ä¢ –í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: <b>{total_sent}</b>
   ‚Ä¢ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: <b>{total_delivered}</b>
   ‚Ä¢ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ: <b>{total_read}</b>
   ‚Ä¢ –£—Å–ø–µ—Ö –¥–æ—Å—Ç–∞–≤–∫–∏: <b>{overall_success_rate:.1f}%</b>
   ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ—á—Ç–µ–Ω–∏—è: <b>{overall_read_rate:.1f}%</b>

‚è±Ô∏è <b>–û–±–Ω–æ–≤–ª–µ–Ω–æ:</b> {format_moscow_time()}
"""
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫: {e}"

def get_logs_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª–æ–≥–æ–≤"""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="üìã –¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü", callback_data="logs_current"))
    keyboard.add(InlineKeyboardButton(text="üìã –ü—Ä–µ–¥—ã–¥—É—â–∏–π –º–µ—Å—è—Ü", callback_data="logs_previous"))
    keyboard.add(InlineKeyboardButton(text="üìã –í—Å–µ –ª–æ–≥–∏", callback_data="logs_all"))
    keyboard.add(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_stats"))
    keyboard.adjust(1)
    return keyboard.as_markup()

def format_mailing_preview(mailing):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é —Ä–∞—Å—Å—ã–ª–∫–∏ —Å –º–æ—Å–∫–æ–≤—Å–∫–∏–º –≤—Ä–µ–º–µ–Ω–µ–º"""
    try:
        from services.database import db
        
        type_emojis = {
            'text': 'üìù',
            'photo': 'üñºÔ∏è',
            'video': 'üé•',
            'document': 'üìé',
            'voice': 'üé§',
            'video_note': 'üìπ'
        }
        
        status_texts = {
            'draft': 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫',
            'active': '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞',
            'archived': 'üìÅ –í –∞—Ä—Ö–∏–≤–µ'
        }
        
        stats = db.get_mailing_stats(mailing['id'])
        
        message_text = mailing['message_text']
        preview_text = message_text[:200] + '...' if len(message_text) > 200 else message_text
        
        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ None –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º strftime
        created_at = format_moscow_time(mailing['created_at']) if mailing.get('created_at') else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        updated_at = format_moscow_time(mailing['updated_at']) if mailing.get('updated_at') else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        
        return f"""
{type_emojis.get(mailing['message_type'], 'üìù')} <b>–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å—Å—ã–ª–∫–∏</b>

üìã <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {mailing['title']}
üìÑ <b>–¢–µ–∫—Å—Ç:</b> {preview_text}
üé¨ <b>–¢–∏–ø:</b> {mailing['message_type']}
üìä <b>–°—Ç–∞—Ç—É—Å:</b> {status_texts.get(mailing['status'], mailing['status'])}
üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b> –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {stats['total_sent']}, –£—Å–ø–µ—à–Ω–æ: {stats['delivered']}
‚è∞ <b>–°–æ–∑–¥–∞–Ω–∞:</b> {created_at}
üîÑ <b>–û–±–Ω–æ–≤–ª–µ–Ω–∞:</b> {updated_at}
"""
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–µ–≤—å—é —Ä–∞—Å—Å—ã–ª–∫–∏: {e}"